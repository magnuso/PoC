<?PHP

/*******************************************************************************

PoC Web-Application-Framwork
http://poc-online.net/

Copyright (c) 2013, PoC - Marcus Grundschok
Released under the MIT license
http://poc-online.net/license

-- pocPackage: pocCore
-- pocPath: usr/bin/edit01/js
-- pocUser: admin
-- pocGroup: user
-- pocPrivileges: rosiud ros--- ------
-- pocTitle: PoC-Edit

*******************************************************************************/

$thePoc = poc::open(pocEnv::$request['poc']);

?>
  <script type="text/javascript">

document.inputsToSave = new Array();
document.dontLeave = true;

function focusInput(input) {
  if (document.inputsToSave[input.id])
    return;
  input.onblur = function () {
    checkDirty();
  };
  input.onkeydown = function (e) {
    if (e.which == 27)
      this.value = this.saveValue;
  };
  input.checkDirty = function () {
    return this.value != this.saveValue;
  };
  input.resetDirty = function () {
    return this.value = this.saveValue;
  };
  input.getData = function () {
    return this.value;
  };
  input.saveValue = input.value;
  document.inputsToSave[input.id] = input;
}

function checkDirty() {
  document.getElementById('updateButton').disabled = true;
  for (var i in document.inputsToSave) {
    if (document.inputsToSave[d].checkDirty()) {
      document.getElementById('updateButton').disabled = false;
      return true;
    }
  }
  return false;
}

function updatePoc() {
  document.dontLeave = false;
  var xmlHttp = null;
  var params = 'action=update';
  for (var i in document.inputsToSave)
    if (document.inputsToSave[i].checkDirty())
      params += '&' + encodeURIComponent(i) + '=' + encodeURIComponent(document.pocsToSave[i].getData());
  try {
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open('POST', '<?PHP $u = new pocPath('.'); echo $u->url; ?>', true);
    xmlHttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8');
    xmlHttp.setRequestHeader('Content-length', params.length);
    xmlHttp.setRequestHeader('Connection', 'close');
    xmlHttp.onreadystatechange = function () {
      if (xmlHttp.readyState == 4) {
        if (xmlHttp.responseText) {
          document.dontLeave = true;
          window.alert(xmlHttp.responseText);
        } else {
          window.location.href = '<?PHP $u = new pocPath('.', array('poc' => $thePoc->path)); echo $u->url; ?>';
        }
      }
    };
    xmlHttp.send(params);
  } catch(e) {
    alert (e);
  }
}

window.addEventListener("beforeunload", function (e) {
  if (document.dontLeave && checkDirtyPocs()) {
    var confirmationMessage = "PoC '<?PHP echo $thePoc->path; ?>' wurde verändert.\nWollen Sie die Änderungen verwerfen?";
    (e || window.event).returnValue = confirmationMessage;     //Gecko + IE
    return confirmationMessage;                                //Webkit, Safari, Chrome etc.
  }
});


document.pocDoInsert = false;
document.pocDoDelete = false;
document.pocIsDirty = false;

function hideTabs() {
  document.getElementById('treeDiv').style.visibility = 'hidden';
  document.getElementById('contentDiv').style.visibility = 'hidden';
  document.getElementById('attributesDiv').style.visibility = 'hidden';
}

function showTab(tab) {
  hideTabs();
  document.getElementById(tab).style.visibility = 'visible';
  document.cookie = "pocEditTab=" + tab;
  return false;
}

function launchImg() {
  var url = "<?PHP $u = new pocPath('usr/bin/filemanager/CKEditor'); echo $u->url; ?>";
  var left = Math.floor((screen.width - 640) / 2);
  var top = Math.floor((screen.height - 480) / 2);
  var launch = window.open(url, "PoC-Image", "width=640,height=480,left=" + left + ",top=" + top + "resizable=yes,scrollbars=yes");
  launch.focus();
  return false;
}

function launchPoc(url) {
  var sel = document.getElementsByName('selection[]');
  var i = 0;
  var n = null;
  while (n = sel[i++])
    if (n.checked)
      url += '&selection[]=' + encodeURIComponent(n.value);
  var left = Math.floor((screen.width - 640) / 2);
  var top = Math.floor((screen.height - 480) / 2);
  var launch = window.open(url, "poc", "width=640,height=480,left=" + left + ",top=" + top + "resizable=yes,scrollbars=yes");
  launch.callMeOnClose = window;
  launch.focus();
  return false;
}

function newPocAttribute(select) {
  launchPoc("<?PHP $u = new pocPath('./attribute', array('poc' => $thePoc->path)); echo $u->url; ?>" + "&className=" + select.options[select.options.selectedIndex].value);
  select.options.selectedIndex = 0;
}

function deletePocAttribute(identifier) {
  if (window.confirm("Attribut:'" + identifier + "' löschen?"))
    launchPoc("<?PHP $u = new pocPath('./attribute', array('poc' => $thePoc->path, 'delete' => 'ok')); echo $u->url; ?>" + "&identifier=" + encodeURIComponent(identifier));
  return false;
}

function onFocusInput(input) {
  input.saveValue = input.value;
  input.onkeydown = function (e) {
    if (e.which == 27)
      this.value = this.saveValue;
  };
  input.onblur = function () {
    if (this.saveValue != this.value)
      updatePocAttribute(this);
    this.saveValue = null;
    this.onkeydown = null;
    this.onblur = null;
  };
}

function updatePocAttribute(input) {
  var xmlHttp = null;
  var params = 'identifier=' + encodeURIComponent(input.name) + '&content=' + encodeURIComponent(input.value);
  try {
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open('POST', '<?PHP $u = new pocPath('./json', array('poc' => $thePoc->path, 'action' => 'updateAttribute')); echo $u->url; ?>', true);
    xmlHttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8');
    xmlHttp.setRequestHeader('Content-length', params.length);
    xmlHttp.setRequestHeader('Connection', 'close');
    xmlHttp.onreadystatechange = function () {
      if (xmlHttp.readyState == 4) {
        input.value = xmlHttp.responseText;
      }
    };
    xmlHttp.send(params);
  } catch(e) {
    alert (e);
  }
}

function checkForm() {
  if (document.pocDoInsert) {
/*    document.pocDoInsert = false;
    name = window.prompt('Enter name for new poc:', '');
    if (name) {
      document.forms[0].elements['name'].value = name;
    } else {
      return false;
    } */
  }
  if (document.pocDoDelete) {
    document.pocDoDelete = false;
    return window.confirm('Really delete this poc and its children?');
  }
  return true;
}

window.theRefreshCall = function() {
  window.location.href = "<?PHP $u = new pocPath('.', array('poc' => $thePoc->path)); echo $u->url; ?>";
}

window.onload = function() {

<?PHP

foreach (pocError::fetchAll() as $error)
  echo "window.alert('$error');\n";

if (!$thePoc->content || (!strpos(" $thePoc->content", '<?PHP') && strpos($thePoc->content, '</'))) {
  $h = $poc['CKEDITORheight'] ? $poc['CKEDITORheight']->content : '400px';
  echo "CKEDITOR.replace( 'content', {
  height: '$h',
  filebrowserBrowseUrl: 'poc.php/usr/bin/filemanager/CKEditor',
  filebrowserWindowWidth: '640',
  filebrowserWindowHeight: '480'
} )";
}

?>

  var tab = 'contentDiv';
  var r = /pocEditTab=(\w+);/;
  if (document.cookie && r.test(document.cookie)) {
    tab = r.exec(document.cookie)[1];
  }
  showTab(tab);
};

  </script>
